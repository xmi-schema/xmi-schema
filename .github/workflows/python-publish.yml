name: Semantic Release & Publish to PyPI

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  id-token: write # for publishing

jobs:
  release:
    name: Semantic Versioning & PyPI Publish
    runs-on: ubuntu-latest

    outputs:
      next_version: ${{ steps.update_pyproject.outputs.next_version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Bump version and tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Update pyproject.toml with new version
        id: update_pyproject
        run: |
          new_tag="${{ steps.tag_version.outputs.new_tag }}"
          version="${new_tag#v}"
          echo "Updating version to $version"
          sed -i "s/^version = \".*\"/version = \"$version\"/" pyproject.toml
          echo "next_version=$version" >> $GITHUB_OUTPUT
          echo "NEXT_VERSION=$version" >> $GITHUB_ENV

      - name: Commit version bump
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Stage updated files (pyproject.toml)
          git add pyproject.toml

          # Check if there are staged changes before committing
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ci: bump version to ${{ steps.tag_version.outputs.new_tag }} [skip ci]"
            git push origin main
          fi

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build the Python package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ env.NEXT_VERSION }}
          name: v${{ env.NEXT_VERSION }}
          body: v${{ env.NEXT_VERSION }}
          artifacts: |
            dist/*.whl
            dist/*.tar.gz
